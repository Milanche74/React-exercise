{"ast":null,"code":"var _jsxFileName = \"/home/milan/react-excercise/front/src/components/RangeSelector.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Range, getTrackBackground } from \"react-range\";\nimport InputEmmiter from \"../services/InputEmmiter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RangeSelector = () => {\n  _s();\n\n  const [values, setValues] = useState([]);\n  const [minMax, setMinMax] = useState([]);\n  useEffect(() => {\n    const subscription = InputEmmiter.rangeMinMaxValues.subscribe(array => {\n      setMinMax(array);\n      setValues(array);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Range, {\n      values: values,\n      step: 1,\n      min: minMax[0],\n      max: minMax[1],\n      onChange: values => {\n        setValues(values);\n        InputEmmiter.rangeEmmiter.next(values);\n      },\n      renderTrack: _ref => {\n        let {\n          props,\n          children\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onMouseDown: props.onMouseDown,\n          onTouchStart: props.onTouchStart,\n          style: { ...props.style,\n            height: \"24px\",\n            display: \"flex\",\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: props.ref,\n            style: {\n              height: \"5px\",\n              width: \"100%\",\n              borderRadius: \"4px\",\n              background: getTrackBackground({\n                values,\n                colors: [\"#ccc\", \"#548BF4\", \"#ccc\"],\n                min: minMax[0],\n                max: minMax[1]\n              }),\n              alignSelf: \"center\"\n            },\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this);\n      },\n      renderThumb: _ref2 => {\n        var _values$index;\n\n        let {\n          index,\n          props,\n          isDragged\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n          style: { ...props.style,\n            height: \"42px\",\n            width: \"42px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#FFF\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            boxShadow: \"0px 2px 6px #AAA\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              top: \"-28px\",\n              color: \"#fff\",\n              fontWeight: \"bold\",\n              fontSize: \"14px\",\n              fontFamily: \"Arial,Helvetica Neue,Helvetica,sans-serif\",\n              padding: \"4px\",\n              borderRadius: \"4px\",\n              backgroundColor: \"#548BF4\"\n            },\n            children: parseFloat((_values$index = values[index]) === null || _values$index === void 0 ? void 0 : _values$index.toFixed(1))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"16px\",\n              width: \"5px\",\n              backgroundColor: isDragged ? \"blue\" : \"yellow\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RangeSelector, \"TKWSZQcVN+Qdq8Tz6ASb3miNnNo=\");\n\n_c = RangeSelector;\nexport default RangeSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"RangeSelector\");","map":{"version":3,"sources":["/home/milan/react-excercise/front/src/components/RangeSelector.js"],"names":["useEffect","useState","Range","getTrackBackground","InputEmmiter","RangeSelector","values","setValues","minMax","setMinMax","subscription","rangeMinMaxValues","subscribe","array","unsubscribe","rangeEmmiter","next","props","children","onMouseDown","onTouchStart","style","height","display","width","ref","borderRadius","background","colors","min","max","alignSelf","index","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","position","top","color","fontWeight","fontSize","fontFamily","padding","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Range, getTrackBackground } from \"react-range\";\nimport InputEmmiter from \"../services/InputEmmiter\";\n\nconst RangeSelector = () => {\n  const [values, setValues] = useState([]);\n  const [minMax, setMinMax] = useState([]);\n\n  useEffect(() => {\n    const subscription = InputEmmiter.rangeMinMaxValues.subscribe((array) => {\n      setMinMax(array);\n      setValues(array);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  return (\n    <div>\n      <Range\n        values={values}\n        step={1}\n        min={minMax[0]}\n        max={minMax[1]}\n        onChange={(values) => {\n          setValues(values);\n          InputEmmiter.rangeEmmiter.next(values);\n        }}\n        renderTrack={({ props, children }) => (\n          <div\n            onMouseDown={props.onMouseDown}\n            onTouchStart={props.onTouchStart}\n            style={{\n              ...props.style,\n              height: \"24px\",\n              display: \"flex\",\n              width: \"100%\",\n            }}\n          >\n            <div\n              ref={props.ref}\n              style={{\n                height: \"5px\",\n                width: \"100%\",\n                borderRadius: \"4px\",\n                background: getTrackBackground({\n                  values,\n                  colors: [\"#ccc\", \"#548BF4\", \"#ccc\"],\n                  min: minMax[0],\n                  max: minMax[1],\n                }),\n                alignSelf: \"center\",\n              }}\n            >\n              {children}\n            </div>\n          </div>\n        )}\n        renderThumb={({ index, props, isDragged }) => (\n          <div\n            {...props}\n            style={{\n              ...props.style,\n              height: \"42px\",\n              width: \"42px\",\n              borderRadius: \"4px\",\n              backgroundColor: \"#FFF\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              boxShadow: \"0px 2px 6px #AAA\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"-28px\",\n                color: \"#fff\",\n                fontWeight: \"bold\",\n                fontSize: \"14px\",\n                fontFamily: \"Arial,Helvetica Neue,Helvetica,sans-serif\",\n                padding: \"4px\",\n                borderRadius: \"4px\",\n                backgroundColor: \"#548BF4\",\n              }}\n            >\n              {parseFloat(values[index]?.toFixed(1))}\n            </div>\n            <div\n              style={{\n                height: \"16px\",\n                width: \"5px\",\n                backgroundColor: isDragged ? \"blue\" : \"yellow\",\n              }}\n            ></div>\n          </div>\n        )}\n      />\n    </div>\n  );\n};\nexport default RangeSelector;\n"]},"metadata":{},"sourceType":"module"}