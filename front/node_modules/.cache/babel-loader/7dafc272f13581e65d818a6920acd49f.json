{"ast":null,"code":"var _jsxFileName = \"/home/milan/react-excercise/front/src/components/Serbia.js\",\n    _s = $RefreshSig$();\n\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nimport { useEffect, useState } from \"react\";\nimport DataProvider from \"../services/DataProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SerbiaData = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [chartOptions, setChartOptions] = useState({});\n\n  const dataFilter = (data, gender) => {\n    let options = {\n      title: \"Blood Pressure index for Serbia population\"\n    };\n\n    if (gender === \"BTSX\") {\n      const seriesArray = data.filter(_ref => {\n        let {\n          Dim1\n        } = _ref;\n        return Dim1 === \"BTSX\";\n      }).map(_ref2 => {\n        let {\n          TimeDimensionValue,\n          NumericValue\n        } = _ref2;\n        return [TimeDimensionValue, NumericValue];\n      });\n      options.series = {\n        name: \"Name\",\n        data: seriesArray\n      };\n    }\n\n    console.log(\"setting\");\n    setChartOptions(options);\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      const data = await DataProvider.getSerbiaData();\n      setData(data);\n    };\n\n    getData();\n    dataFilter(data, \"BTSX\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Serbia Graph here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SerbiaData, \"OVygtphRWzNllYnsxHhWMJZdwWs=\");\n\n_c = SerbiaData;\nexport default SerbiaData;\n\nvar _c;\n\n$RefreshReg$(_c, \"SerbiaData\");","map":{"version":3,"sources":["/home/milan/react-excercise/front/src/components/Serbia.js"],"names":["HighchartsReact","Highcharts","useEffect","useState","DataProvider","SerbiaData","data","setData","chartOptions","setChartOptions","dataFilter","gender","options","title","seriesArray","filter","Dim1","map","TimeDimensionValue","NumericValue","series","name","console","log","getData","getSerbiaData"],"mappings":";;;AAAA,OAAOA,eAAP,MAA4B,2BAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMO,UAAU,GAAG,CAACJ,IAAD,EAAOK,MAAP,KAAkB;AACnC,QAAIC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAE;AADK,KAAd;;AAGA,QAAIF,MAAM,KAAK,MAAf,EAAuB;AACrB,YAAMG,WAAW,GAAGR,IAAI,CACrBS,MADiB,CACV;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAcA,IAAI,KAAK,MAAvB;AAAA,OADU,EAEjBC,GAFiB,CAEb;AAAA,YAAC;AAAEC,UAAAA,kBAAF;AAAsBC,UAAAA;AAAtB,SAAD;AAAA,eAA0C,CAC7CD,kBAD6C,EAE7CC,YAF6C,CAA1C;AAAA,OAFa,CAApB;AAMAP,MAAAA,OAAO,CAACQ,MAAR,GAAiB;AACfC,QAAAA,IAAI,EAAE,MADS;AAEff,QAAAA,IAAI,EAAEQ;AAFS,OAAjB;AAID;;AACDQ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAd,IAAAA,eAAe,CAACG,OAAD,CAAf;AACD,GAlBD;;AAoBAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,OAAO,GAAG,YAAY;AAC1B,YAAMlB,IAAI,GAAG,MAAMF,YAAY,CAACqB,aAAb,EAAnB;AACAlB,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAHD;;AAIAkB,IAAAA,OAAO;AACPd,IAAAA,UAAU,CAACJ,IAAD,EAAO,MAAP,CAAV;AACD,GAPQ,EAON,EAPM,CAAT;AAQA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAiB,MAAA,UAAU,EAAEL,UAA7B;AAAyC,MAAA,OAAO,EAAEO;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtCD;;GAAMH,U;;KAAAA,U;AAwCN,eAAeA,UAAf","sourcesContent":["import HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nimport { useEffect, useState } from \"react\";\nimport DataProvider from \"../services/DataProvider\";\n\nconst SerbiaData = () => {\n  const [data, setData] = useState([]);\n  const [chartOptions, setChartOptions] = useState({});\n\n  const dataFilter = (data, gender) => {\n    let options = {\n      title: \"Blood Pressure index for Serbia population\",\n    };\n    if (gender === \"BTSX\") {\n      const seriesArray = data\n        .filter(({ Dim1 }) => Dim1 === \"BTSX\")\n        .map(({ TimeDimensionValue, NumericValue }) => [\n          TimeDimensionValue,\n          NumericValue,\n        ]);\n      options.series = {\n        name: \"Name\",\n        data: seriesArray,\n      };\n    }\n    console.log(\"setting\");\n    setChartOptions(options);\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      const data = await DataProvider.getSerbiaData();\n      setData(data);\n    };\n    getData();\n    dataFilter(data, \"BTSX\");\n  }, []);\n  return (\n    <div>\n      <h2>Serbia Graph here</h2>\n      <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n    </div>\n  );\n};\n\nexport default SerbiaData;\n"]},"metadata":{},"sourceType":"module"}