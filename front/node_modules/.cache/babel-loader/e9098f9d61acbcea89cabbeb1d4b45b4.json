{"ast":null,"code":"var _jsxFileName = \"/home/milan/react-excercise/front/src/components/Serbia.js\",\n    _s = $RefreshSig$();\n\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nimport { useEffect, useState } from \"react\";\nimport DataProvider from \"../services/DataProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SerbiaData = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [chartOptions, setChartOptions] = useState({});\n  const buttons = [\"Female\", \"Male\", \"Compare\"];\n\n  const dataFilter = (data, gender) => {\n    console.log(gender);\n    let options = {\n      title: {\n        text: \"Blood Pressure index for Serbia population\"\n      }\n    };\n\n    switch (gender) {\n      case \"BTSX\":\n        const seriesArray = data.filter(_ref => {\n          let {\n            Dim1\n          } = _ref;\n          return Dim1 === \"BTSX\";\n        }).map(_ref2 => {\n          let {\n            TimeDimensionValue,\n            NumericValue\n          } = _ref2;\n          return [parseInt(TimeDimensionValue), NumericValue];\n        });\n        options = { ...options,\n          series: {\n            name: \"Both Genders\",\n            data: seriesArray\n          }\n        };\n        break;\n    }\n\n    console.log(options);\n    setChartOptions(options);\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      const data = await DataProvider.getSerbiaData();\n      setData(data);\n      dataFilter(data, \"BTSX\");\n    };\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Serbia Graph here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), buttons.map(b => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dataFilter(data, b.innerText);\n        },\n        children: b\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SerbiaData, \"OVygtphRWzNllYnsxHhWMJZdwWs=\");\n\n_c = SerbiaData;\nexport default SerbiaData;\n\nvar _c;\n\n$RefreshReg$(_c, \"SerbiaData\");","map":{"version":3,"sources":["/home/milan/react-excercise/front/src/components/Serbia.js"],"names":["HighchartsReact","Highcharts","useEffect","useState","DataProvider","SerbiaData","data","setData","chartOptions","setChartOptions","buttons","dataFilter","gender","console","log","options","title","text","seriesArray","filter","Dim1","map","TimeDimensionValue","NumericValue","parseInt","series","name","getData","getSerbiaData","b","innerText"],"mappings":";;;AAAA,OAAOA,eAAP,MAA4B,2BAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMO,OAAO,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB,CAAhB;;AAEA,QAAMC,UAAU,GAAG,CAACL,IAAD,EAAOM,MAAP,KAAkB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAIG,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AADK,KAAd;;AAIA,YAAQL,MAAR;AACE,WAAK,MAAL;AACE,cAAMM,WAAW,GAAGZ,IAAI,CACrBa,MADiB,CACV;AAAA,cAAC;AAAEC,YAAAA;AAAF,WAAD;AAAA,iBAAcA,IAAI,KAAK,MAAvB;AAAA,SADU,EAEjBC,GAFiB,CAEb;AAAA,cAAC;AAAEC,YAAAA,kBAAF;AAAsBC,YAAAA;AAAtB,WAAD;AAAA,iBAA0C,CAC7CC,QAAQ,CAACF,kBAAD,CADqC,EAE7CC,YAF6C,CAA1C;AAAA,SAFa,CAApB;AAMAR,QAAAA,OAAO,GAAG,EACR,GAAGA,OADK;AAERU,UAAAA,MAAM,EAAE;AAAEC,YAAAA,IAAI,EAAE,cAAR;AAAwBpB,YAAAA,IAAI,EAAEY;AAA9B;AAFA,SAAV;AAIA;AAZJ;;AAcAL,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACAN,IAAAA,eAAe,CAACM,OAAD,CAAf;AACD,GAtBD;;AAwBAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,OAAO,GAAG,YAAY;AAC1B,YAAMrB,IAAI,GAAG,MAAMF,YAAY,CAACwB,aAAb,EAAnB;AACArB,MAAAA,OAAO,CAACD,IAAD,CAAP;AAEAK,MAAAA,UAAU,CAACL,IAAD,EAAO,MAAP,CAAV;AACD,KALD;;AAMAqB,IAAAA,OAAO;AACR,GARQ,EAQN,EARM,CAAT;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGjB,OAAO,CAACW,GAAR,CAAaQ,CAAD,IAAO;AAClB,0BACE;AACE,QAAA,OAAO,EAAE,MAAM;AACblB,UAAAA,UAAU,CAACL,IAAD,EAAOuB,CAAC,CAACC,SAAT,CAAV;AACD,SAHH;AAAA,kBAKGD;AALH;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVA,CAFH,eAaE,QAAC,eAAD;AAAiB,MAAA,UAAU,EAAE5B,UAA7B;AAAyC,MAAA,OAAO,EAAEO;AAAlD;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAvDD;;GAAMH,U;;KAAAA,U;AAyDN,eAAeA,UAAf","sourcesContent":["import HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nimport { useEffect, useState } from \"react\";\nimport DataProvider from \"../services/DataProvider\";\n\nconst SerbiaData = () => {\n  const [data, setData] = useState([]);\n  const [chartOptions, setChartOptions] = useState({});\n  const buttons = [\"Female\", \"Male\", \"Compare\"];\n\n  const dataFilter = (data, gender) => {\n    console.log(gender);\n    let options = {\n      title: { text: \"Blood Pressure index for Serbia population\" },\n    };\n\n    switch (gender) {\n      case \"BTSX\":\n        const seriesArray = data\n          .filter(({ Dim1 }) => Dim1 === \"BTSX\")\n          .map(({ TimeDimensionValue, NumericValue }) => [\n            parseInt(TimeDimensionValue),\n            NumericValue,\n          ]);\n        options = {\n          ...options,\n          series: { name: \"Both Genders\", data: seriesArray },\n        };\n        break;\n    }\n    console.log(options);\n    setChartOptions(options);\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      const data = await DataProvider.getSerbiaData();\n      setData(data);\n\n      dataFilter(data, \"BTSX\");\n    };\n    getData();\n  }, []);\n  return (\n    <div>\n      <h2>Serbia Graph here</h2>\n      {buttons.map((b) => {\n        return (\n          <button\n            onClick={() => {\n              dataFilter(data, b.innerText);\n            }}\n          >\n            {b}\n          </button>\n        );\n      })}\n      <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n    </div>\n  );\n};\n\nexport default SerbiaData;\n"]},"metadata":{},"sourceType":"module"}